module std::os::win32;

define Bool = int;
define Boolean = Byte;
define Byte = char;
define CChar = cinterop::CChar;
define Char = cinterop::CChar;
define Colorref = DWord;
define DWord = uint;
define DWordlong = ulong;
define DWordPtr = ULongPtr;
define DWord32 = uint;
define DWord64 = ulong;
define Float = float;
define HAccel = Handle;
define HalfPtr = int;
define Handle = PVoid;
define HBitmap = Handle;
define HBrush = Handle;
define HColorspace = Handle;
define HConv = Handle;
define HConvlist = Handle;
define HCursor = HIcon;
define HDc = Handle;
define HDDEdata = Handle;
define HDesk = Handle;
define HDrop = Handle;
define HDwp = Handle;
define HFile = int;
define HFont = Handle;
define HGdiobj = Handle;
define HGlobal = Handle;
define HHook = Handle;
define HIcon = Handle;
define HInstance = Handle;
define HKey = Handle;
define HKl = Handle;
define HLocal = Handle;
define HMenu = Handle;
define HMetafile = Handle;
define HModule = Handle;
define HMonitor = Handle;
define HPalette = Handle;
define HPen = Handle;
define HResult = Long;
define HRgn = Handle;
define HRsrc = Handle;
define HSz = Handle;
define HWinsta = Handle;
define HWnd = Handle;
define Int = int;
define IntPtr = iptr;
define Int8 = ichar;
define Int16 = short;
define Int32 = int;
define Int64 = long;
define Langid = Word;
define Lcid = DWord;
define Lctype = DWord;
define Lgrpid = DWord;
define Long = int;
define Longlong = long;
define LongPtr = iptr;
define Long32 = int;
define Long64 = long;
define LParam = LongPtr;
define LPBool = Bool*;
define LPByte = Byte*;
define LPColorref = DWord*;
define LPCStr = CChar*;
define LPCTstr = LPCWstr;
define LPCVoid = void*;
define LPCWstr = WChar*;
define LPDWord = DWord*;
define LPHandle = Handle*;
define LPInt = int*;
define LPLong = int*;
define LPStr = CChar*;
define LPTstr = LPWstr;
define LPVoid = void*;
define LPWord = Word*;
define LPWstr = WChar*;
define LResult = LongPtr;
define PBool = Bool*;
define PBoolean = Boolean*;
define PByte = Byte*;
define PChar = Char*;
define PCstr = Char*;
define PCTstr = LPCWstr;
define PCUnicodeString = UnicodeString*;
define PCWstr = Char16*;
define PDWord = DWord*;
define PDWordlong = DWordlong*;
define PDWordPtr = DWordPtr*;
define PDWord32 = DWord32*;
define PDWord64 = DWord64*;
define PFloat = Float*;
define PHalfPtr = HalfPtr*;
define PHandle = Handle*;
define PHKey = HKey*;
define PInt = int*;
define PIntPtr = IntPtr*;
define PInt8 = Int8*;
define PInt16 = Int16*;
define PInt32 = Int32*;
define PInt64 = Int64*;
define PLcid = PDWord;
define PLong = Long*;
define PLonglong = Longlong*;
define PLongPtr = LongPtr*;
define PLong32 = Long32*;
define PLong64 = Long64*;
define Pointer32 = uint;
define Pointer64 = uptr;
define PointerSigned = iptr;
define PointerUnsigned = uptr;
define PShort = Short*;
define PSizeT = usz*;
define PSSizeT = isz*;
define PStr = Char*;
define PTByte = TByte*;
define PTChar = TChar*;
define PTStr = LPWstr;
define PUChar = UChar*;
define PUHalfPtr = UHalfPtr*;
define PUInt = UInt*;
define PUIntPtr = UIntPtr*;
define PUInt8 = UInt8*;
define PUInt16 = UInt16*;
define PUInt32 = UInt32*;
define PUInt64 = UInt64*;
define PULong = ULong*;
define PULonglong = ULonglong*;
define PULongPtr = ULongPtr*;
define PULong32 = ULong32*;
define PULong64 = ULong64*;
define PUnicodeString = UnicodeString*;
define PUShort = UShort*;
define PVoid = void*;
define PWChar = WChar*;
define PWord = Word*;
define PWStr = WChar*;
define QWord = ulong;
define ScHandle = Handle;
define ScLong = LPVoid;
define ServiceStatusHandle = Handle;
define Short = short;
define SizeT = usz;
define SSizeT = isz;
define TByte = WChar;
define TChar = WChar;
define UChar = char;
define UHalfPtr = uint;
define UInt = uint;
define UIntPtr = uptr;
define UInt8 = char;
define UInt16 = ushort;
define UInt32 = uint;
define UInt64 = ulong;
define ULong = uint;
define ULonglong = ulong;
define ULongPtr = ulong;
define ULong32 = uint;
define ULong64 = ulong;
define UShort = ushort;
define Usn = Longlong;
define WChar = Char16;
define Word = ushort;
define WParam = UIntPtr;

struct UnicodeString
{
	UShort length;
	UShort maximum_length;
	PWStr buffer;
}
