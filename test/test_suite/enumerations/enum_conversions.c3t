// #safe: yes
// #target: macos-x64
module test;
enum Abc : char { ABC }

fn void main()
{
	int a;
	Abc x = (Abc)a;
	long z;
	Abc y = (Abc)z;
	a = 256;
	y = (Abc)a;
	a = -1;
	y = (Abc)a;
}

/* #expect: test.ll

define void @test.main() #0 {
entry:
  %a = alloca i32, align 4
  %x = alloca i8, align 1
  %z = alloca i64, align 8
  %y = alloca i8, align 1
  store i32 0, ptr %a, align 4
  %0 = load i32, ptr %a, align 4
  %lt = icmp slt i32 %0, 0
  br i1 %lt, label %panic, label %checkok

panic:                                            ; preds = %entry
  %1 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %1(ptr @.panic_msg, i64 68, ptr @.file, i64 19, ptr @.func, i64 4, i32 7)
  br label %checkok

checkok:                                          ; preds = %panic, %entry
  %ge = icmp sge i32 %0, 1
  br i1 %ge, label %panic1, label %checkok2

panic1:                                           ; preds = %checkok
  %2 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %2(ptr @.panic_msg.1, i64 63, ptr @.file.2, i64 19, ptr @.func.3, i64 4, i32 7)
  br label %checkok2

checkok2:                                         ; preds = %panic1, %checkok
  %ztrunc = trunc i32 %0 to i8
  store i8 %ztrunc, ptr %x, align 1
  store i64 0, ptr %z, align 8
  %3 = load i64, ptr %z, align 8
  %lt3 = icmp slt i64 %3, 0
  br i1 %lt3, label %panic4, label %checkok5

panic4:                                           ; preds = %checkok2
  %4 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %4(ptr @.panic_msg.4, i64 68, ptr @.file.5, i64 19, ptr @.func.6, i64 4, i32 9)
  br label %checkok5

checkok5:                                         ; preds = %panic4, %checkok2
  %ge6 = icmp sge i64 %3, 1
  br i1 %ge6, label %panic7, label %checkok8

panic7:                                           ; preds = %checkok5
  %5 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %5(ptr @.panic_msg.7, i64 63, ptr @.file.8, i64 19, ptr @.func.9, i64 4, i32 9)
  br label %checkok8

checkok8:                                         ; preds = %panic7, %checkok5
  %ztrunc9 = trunc i64 %3 to i8
  store i8 %ztrunc9, ptr %y, align 1
  store i32 256, ptr %a, align 4
  %6 = load i32, ptr %a, align 4
  %lt10 = icmp slt i32 %6, 0
  br i1 %lt10, label %panic11, label %checkok12

panic11:                                          ; preds = %checkok8
  %7 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %7(ptr @.panic_msg.10, i64 68, ptr @.file.11, i64 19, ptr @.func.12, i64 4, i32 11)
  br label %checkok12

checkok12:                                        ; preds = %panic11, %checkok8
  %ge13 = icmp sge i32 %6, 1
  br i1 %ge13, label %panic14, label %checkok15

panic14:                                          ; preds = %checkok12
  %8 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %8(ptr @.panic_msg.13, i64 63, ptr @.file.14, i64 19, ptr @.func.15, i64 4, i32 11)
  br label %checkok15

checkok15:                                        ; preds = %panic14, %checkok12
  %ztrunc16 = trunc i32 %6 to i8
  store i8 %ztrunc16, ptr %y, align 1
  store i32 -1, ptr %a, align 4
  %9 = load i32, ptr %a, align 4
  %lt17 = icmp slt i32 %9, 0
  br i1 %lt17, label %panic18, label %checkok19

panic18:                                          ; preds = %checkok15
  %10 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %10(ptr @.panic_msg.16, i64 68, ptr @.file.17, i64 19, ptr @.func.18, i64 4, i32 13)
  br label %checkok19

checkok19:                                        ; preds = %panic18, %checkok15
  %ge20 = icmp sge i32 %9, 1
  br i1 %ge20, label %panic21, label %checkok22

panic21:                                          ; preds = %checkok19
  %11 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %11(ptr @.panic_msg.19, i64 63, ptr @.file.20, i64 19, ptr @.func.21, i64 4, i32 13)
  br label %checkok22

checkok22:                                        ; preds = %panic21, %checkok19
  %ztrunc23 = trunc i32 %9 to i8
  store i8 %ztrunc23, ptr %y, align 1
  ret void
}
